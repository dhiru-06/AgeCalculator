{"version":3,"sources":["components/Appstats.js","components/App.js","index.js"],"names":["Appstats","date","today","Date","getTime","otherday","difference","Math","abs","days","floor","years","months","dayss","this","props","timeSince","timeMonths","timeDays","timeHours","timeMinutes","timeSeconds","timeSleep","timeBreaths","timeHeart","Component","App","state","newDate","birthday","console","log","setState","class","recycle","number","of","numberOfPieces","width","height","Form","FormControl","type","onChange","event","target","value","Button","onClick","changeBirthday","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc88aa43.chunk.js","sourcesContent":["import React ,{Component} from 'react';\r\n\r\nclass Appstats extends Component{\r\n    timeSince(date){\r\n        let today = new Date().getTime();\r\n        let otherday = new Date(date).getTime();\r\n        let difference = Math.abs(today - otherday);\r\n\r\n        let days = Math.floor(difference / (1000*3600*24));\r\n        let years = Math.floor(days/365);\r\n    \r\n        return `Age in Years:\r\n                ${years} years \r\n               `          \r\n    }\r\n\r\n    timeMonths(date){\r\n        let today = new Date().getTime();\r\n        let otherday = new Date(date).getTime();\r\n        let difference = Math.abs(today - otherday);\r\n\r\n        let days = Math.floor(difference / (1000*3600*24));\r\n        let years = Math.floor(days/365);\r\n        let months = Math.floor(days/31);\r\n\r\n        return `Age in Months:\r\n                ${months} months\r\n               `\r\n    }\r\n\r\n    timeDays(date){\r\n        let today = new Date().getTime();\r\n        let otherday = new Date(date).getTime();\r\n        let difference = Math.abs(today - otherday);\r\n\r\n        let days = Math.floor(difference / (1000*3600*24));\r\n        let years = Math.floor(days/365);\r\n        let months = years*12;\r\n        let dayss = months*30;\r\n\r\n        return `Age in Days:\r\n                ${dayss} days\r\n               `\r\n    }\r\n\r\n    timeHours(date){\r\n        let today = new Date().getTime();\r\n        let otherday = new Date(date).getTime();\r\n        let difference = Math.abs(today - otherday);\r\n\r\n        let days = Math.floor(difference / (1000*3600*24));\r\n        let years = Math.floor(days/365);\r\n        let months = years*12;\r\n        let dayss = months*30;\r\n        let hours = dayss*24;\r\n\r\n        return `Age in Hours:\r\n                ${hours} hours\r\n               `\r\n    }\r\n\r\n    timeMinutes(date){\r\n        let today = new Date().getTime();\r\n        let otherday = new Date(date).getTime();\r\n        let difference = Math.abs(today - otherday);\r\n\r\n        let days = Math.floor(difference / (1000*3600*24));\r\n        let years = Math.floor(days/365);\r\n        let months = years*12;\r\n        let dayss = months*30;\r\n        let hours = dayss*24\r\n        let minutes = hours*60;\r\n\r\n        return `Age in Minutes:\r\n                ${minutes} minutes\r\n               `\r\n    }\r\n\r\n    timeSeconds(date){\r\n        let today = new Date().getTime();\r\n        let otherday = new Date(date).getTime();\r\n        let difference = Math.abs(today - otherday);\r\n\r\n        let days = Math.floor(difference / (1000*3600*24));\r\n        let years = Math.floor(days/365);\r\n        let months = years*12;\r\n        let dayss = months*30;\r\n        let hours = dayss*24\r\n        let minutes = hours*60;\r\n        let seconds = minutes*60;\r\n\r\n        return `Age in Seconds:\r\n                ${seconds} seconds\r\n               `\r\n    }\r\n\r\n    timeSleep(date){\r\n        let today = new Date().getTime();\r\n        let otherday = new Date(date).getTime();\r\n        let difference = Math.abs(today - otherday);\r\n\r\n        let days = Math.floor(difference / (1000*3600*24));\r\n        let years = Math.floor(days/365);\r\n        let months = years*12;\r\n        let dayss = months*30;\r\n        let hours = dayss*24\r\n        let minutes = hours*60;\r\n        let sleep = dayss*8;\r\n       \r\n\r\n        return `You have slept around:\r\n                ${sleep} hours\r\n               `\r\n    }\r\n\r\n    timeBreaths(date){\r\n        let today = new Date().getTime();\r\n        let otherday = new Date(date).getTime();\r\n        let difference = Math.abs(today - otherday);\r\n\r\n        let days = Math.floor(difference / (1000*3600*24));\r\n        let years = Math.floor(days/365);\r\n        let months = years*12;\r\n        let dayss = months*30;\r\n        let hours = dayss*24\r\n        let minutes = hours*60;\r\n        let breaths = dayss*20000\r\n\r\n        return `You have taken breaths around:\r\n                ${breaths} times\r\n               `\r\n    }\r\n\r\n    timeHeart(date){\r\n        let today = new Date().getTime();\r\n        let otherday = new Date(date).getTime();\r\n        let difference = Math.abs(today - otherday);\r\n\r\n        let days = Math.floor(difference / (1000*3600*24));\r\n        let years = Math.floor(days/365);\r\n        let months = years*12;\r\n        let dayss = months*30;\r\n        let hours = dayss*24\r\n        let heart = dayss*103680\r\n\r\n        return `Your heart has beaten around:\r\n                ${heart} times\r\n               `\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n               <h3>{this.props.date}</h3> \r\n               <h4>{this.timeSince(this.props.date)}</h4>\r\n               <h4>{this.timeMonths(this.props.date)}</h4>\r\n               <h4>{this.timeDays(this.props.date)}</h4>\r\n               <h4>{this.timeHours(this.props.date)}</h4>\r\n               <h4>{this.timeMinutes(this.props.date)}</h4>\r\n               <h4>{this.timeSeconds(this.props.date)}</h4>\r\n               <h4>{this.timeSleep(this.props.date)}</h4>\r\n               <h4>{this.timeBreaths(this.props.date)}</h4>\r\n               <h4>{this.timeHeart(this.props.date)}</h4>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Appstats;","import React, {Component} from 'react';\r\nimport {Form, FormControl, Button} from 'react-bootstrap';\r\nimport './App.css';\r\nimport Appstats from './Appstats';\r\nimport Confetti from 'react-confetti';\r\n\r\n\r\n\r\nclass App extends Component{\r\nconstructor(){\r\n    super();\r\n\r\n    this.state={\r\n        newDate: '',\r\n        birthday: ''\r\n    }\r\n}\r\n\r\nchangeBirthday(){\r\n    console.log(this.state);\r\n    this.setState({birthday: this.state.newDate });\r\n}\r\n  \r\n\r\n\r\n    render(){\r\n        return ( \r\n            <div class=\"Age\">\r\n                <Confetti\r\n                recycle={false}\r\n                number of numberOfPieces={1000}\r\n                width = {1500}\r\n                height = {700}\r\n                />\r\n                <h1>Age Calculator</h1>\r\n                \r\n                <h3>Enter your birth date</h3>\r\n                <Form >\r\n                    <FormControl class=\"dte\" type=\"date\"\r\n                    onChange={event => this.setState({newDate :event.target.value})}\r\n                    >\r\n                    </FormControl>\r\n                    {' '} <br></br>\r\n                    <Button class=\"btn\"\r\n                    onClick={()=> this.changeBirthday()\r\n                    }\r\n                    >\r\n                        Calculate\r\n                    </Button>\r\n\r\n                    <Appstats date={this.state.birthday}/>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;\r\n","import  React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './components/App'\r\n\r\nReactDom.render(\r\n<App/>, document.getElementById('root')\r\n)"],"sourceRoot":""}